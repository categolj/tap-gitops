apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: rest-service
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
  labels:
    apis.apps.tanzu.vmware.com/register-api: "true"
    app.kubernetes.io/part-of: rest-service
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: rest-service
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/actuator: http://:8081/actuator
        boot.spring.io/version: 2.7.5
        conventions.carto.run/applied-conventions: |-
          inspect-image-convention/buildpacks
          inspect-image-convention/base-image
          inspect-image-convention/run-image
          inspect-image-convention/source
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          appliveview-sample/app-live-view-appflavour-check
          appliveview-sample/app-live-view-connector-boot
          appliveview-sample/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-systemproperties
        developer.conventions/target-containers: workload
        inspect-image.buildpacks.io/base-image: |-
          reference: ghcr.io/making/build-service@sha256:f8dbbf8fa654c1731e039671a6683b97d3e4a2cd8344e9e99409cad8ecaf5f95
          top_layer: sha256:d10fcfd222e42332f995be30faf8856758b34ce68e864bf2206d87bf3f1a7108
        inspect-image.buildpacks.io/buildpacks: |-
          - id: tanzu-buildpacks/deprecation-warnings
            version: 0.0.2
          - id: paketo-buildpacks/ca-certificates
            version: 3.4.0
          - id: paketo-buildpacks/bellsoft-liberica
            version: 9.8.0
          - id: paketo-buildpacks/syft
            version: 1.10.1
          - id: paketo-buildpacks/maven
            version: 6.11.0
          - id: paketo-buildpacks/executable-jar
            version: 6.5.0
          - id: paketo-buildpacks/apache-tomcat
            version: 7.8.0
          - id: paketo-buildpacks/apache-tomee
            version: 1.3.0
          - id: paketo-buildpacks/liberty
            version: 2.2.0
          - id: paketo-buildpacks/dist-zip
            version: 5.4.0
          - id: paketo-buildpacks/spring-boot
            version: 5.19.0
          - id: paketo-buildpacks/image-labels
            version: 4.3.0
        inspect-image.buildpacks.io/run-image: ghcr.io/making/build-service@sha256:f8dbbf8fa654c1731e039671a6683b97d3e4a2cd8344e9e99409cad8ecaf5f95
        inspect-image.opencontainers.org/source: main/bcc1e80fcf681573c71a3f424560775ad226db33
      labels:
        apis.apps.tanzu.vmware.com/register-api: "true"
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: rest-service
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: rest-service
        conventions.apps.tanzu.vmware.com/framework: spring-boot
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.port: "8081"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: rest-service
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.endpoint.health.show-details=always -Dmanagement.endpoints.web.base-path="/actuator" -Dmanagement.endpoints.web.exposure.include=* -Dmanagement.health.probes.enabled="true" -Dmanagement.server.port="8081" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: ghcr.io/making/supply-chain/rest-service-playground@sha256:f20649e7f2c52a4165eebc9e6885c245942cc9f6e4efb4cced488bac83f5059d
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

