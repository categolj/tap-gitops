apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-db
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: backup-db
    apps.tanzu.vmware.com/auto-configure-actuators: "false"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: cronjob
    kapp.k14s.io/app: "1673062250001482428"
    kapp.k14s.io/association: v1.4e043a1fa1e762f9e99e68cc4f600214
    app.kubernetes.io/component: run
    carto.run/workload-name: backup-db
spec:
  schedule: 0 15 * * ?
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: backup-db
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: cronjob
        carto.run/workload-name: backup-db
        kapp.k14s.io/app: "1673062250001482428"
        kapp.k14s.io/association: v1.4e043a1fa1e762f9e99e68cc4f600214
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            conventions.carto.run/applied-conventions: |-
              appliveview-sample/app-live-view-appflavour-check
              spring-boot-convention/auto-configure-actuators-check
              spring-boot-convention/app-live-view-appflavour-check
            developer.conventions/target-containers: workload
            kapp.k14s.io/disable-original: ""
            kapp.k14s.io/identity: v1;blog/carto.run/Workload/backup-db;carto.run/v1alpha1
          labels:
            app.kubernetes.io/component: run
            app.kubernetes.io/part-of: backup-db
            apps.tanzu.vmware.com/auto-configure-actuators: "false"
            apps.tanzu.vmware.com/has-tests: "true"
            apps.tanzu.vmware.com/workload-type: cronjob
            carto.run/workload-name: backup-db
            kapp.k14s.io/app: "1673062250001482428"
            kapp.k14s.io/association: v1.4e043a1fa1e762f9e99e68cc4f600214
        spec:
          containers:
          - env:
            - name: JAVA_TOOL_OPTIONS
              value: -Dmanagement.health.probes.enabled="false"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: access_key
                  name: backup-s3
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: access_secret
                  name: backup-s3
            - name: S3_HOSTNAME
              valueFrom:
                secretKeyRef:
                  key: host
                  name: backup-s3
            - name: S3_BUCKET
              value: pg-dump-to-s3
            - name: PGDUMP_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: blog-db
            - name: PGDUMP_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: blog-db
            - name: PGDUMP_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: blog-db
            - name: PGDUMP_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database
                  name: blog-db
            - name: PGDUMP_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: blog-db
            - name: MANAGEMENT_ZIPKIN_TRACING_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: otel-trace-endpoint
                  name: otel-config
            image: ghcr.io/making/supply-chain/backup-db-blog@sha256:1441be3d0464966c9b4a1fbd9e0fb88f6e2c53ea66d9c925eda5b95b2fa85f8d
            name: workload
            resources: {}
            securityContext:
              runAsUser: 1000
          serviceAccountName: default
          restartPolicy: Never

