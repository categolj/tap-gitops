apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: blog-api
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    apis.apps.tanzu.vmware.com/register-api: "true"
    app.kubernetes.io/part-of: blog-api
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: blog-api
spec:
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/correlationid: https://github.com/categolj/blog-api?sub_path=/
        autoscaling.knative.dev/maxScale: "1"
        autoscaling.knative.dev/minScale: "1"
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kapp.k14s.io/disable-original: ""
        kapp.k14s.io/identity: v1;blog/carto.run/Workload/blog-api;carto.run/v1alpha1
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        apis.apps.tanzu.vmware.com/register-api: "true"
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: blog-api
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: blog-api
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -XX:ReservedCodeCacheSize=32M -Xss512k -Dfile.encoding="UTF-8" -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.endpoint.health.show-details="always" -Dmanagement.endpoints.web.exposure.include="info,health,prometheus" -Dmanagement.health.probes.enabled="true" -Dserver.shutdown.grace-period="24s" -Duser.country="JP" -Duser.language="ja" -Duser.timezone="Asia/Tokyo"
        - name: BPL_JVM_THREAD_COUNT
          value: "28"
        - name: SPRING_APPLICATION_NAME
          valueFrom:
            secretKeyRef:
              key: otel-trace-service-name
              name: otel-config
        - name: MANAGEMENT_TRACING_PROPAGATION_TYPE
          value: W3C
        - name: SPRING_SECURITY_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: blog-config
        - name: BLOG_TENANT_USERS_0
          valueFrom:
            secretKeyRef:
              key: users-0
              name: blog-config
        - name: BLOG_TENANT_USERS_1
          valueFrom:
            secretKeyRef:
              key: users-1
              name: blog-config
        - name: BLOG_TENANT_USERS_2
          valueFrom:
            secretKeyRef:
              key: users-2
              name: blog-config
        - name: BLOG_GITHUB_CONTENTOWNER
          value: making
        - name: BLOG_GITHUB_CONTENTREPO
          value: blog.ik.am
        - name: BLOG_GITHUB_ACCESSTOKEN
          valueFrom:
            secretKeyRef:
              key: github-access-token
              name: blog-config
        - name: BLOG_GITHUB_WEBHOOKSECRET
          valueFrom:
            secretKeyRef:
              key: github-webhook-secret
              name: blog-config
        - name: BLOG_GITHUB_TENANTS_EN_CONTENTOWNER
          value: making
        - name: BLOG_GITHUB_TENANTS_EN_CONTENTREPO
          value: ik.am_en
        - name: BLOG_GITHUB_TENANTS_EN_ACCESSTOKEN
          valueFrom:
            secretKeyRef:
              key: github-access-token-en
              name: blog-config
        - name: BLOG_GITHUB_TENANTS_EN_WEBHOOKSECRET
          valueFrom:
            secretKeyRef:
              key: github-webhook-secret-en
              name: blog-config
        - name: MANAGEMENT_ZIPKIN_TRACING_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: otel-trace-endpoint
              name: otel-config
        - name: INFO_ENV_HOSTNAME
          value: ${HOSTNAME:}
        - name: INFO_ENV_K_SERVICE
          value: ${K_SERVICE:}
        - name: INFO_ENV_K_CONFIGURATION
          value: ${K_CONFIGURATION:}
        - name: INFO_ENV_K_REVISION
          value: ${K_REVISION:}
        image: ghcr.io/making/supply-chain/blog-api-blog@sha256:11350b38e2d4339ee2cb0942f4bf11090c8b95e28f38e5ed99a51276fb309fe7
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 512Mi
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

