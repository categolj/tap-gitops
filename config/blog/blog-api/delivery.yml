apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: blog-api
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
  labels:
    apis.apps.tanzu.vmware.com/register-api: "true"
    app.kubernetes.io/part-of: blog-api
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    kapp.k14s.io/app: "1665663307561447397"
    kapp.k14s.io/association: v1.eae2bf111fb39e9481c024f683deba7a
    app.kubernetes.io/component: run
    carto.run/workload-name: blog-api
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/actuator: http://:8081/actuator
        boot.spring.io/version: 3.0.0
        conventions.carto.run/applied-conventions: |-
          inspect-image-convention/buildpacks
          inspect-image-convention/base-image
          inspect-image-convention/run-image
          inspect-image-convention/source
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/service-intent-postgres
          appliveview-sample/app-live-view-appflavour-check
          appliveview-sample/app-live-view-connector-boot
          appliveview-sample/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-systemproperties
        developer.conventions/target-containers: workload
        inspect-image.buildpacks.io/base-image: |-
          reference: ghcr.io/making/build-service@sha256:15368fb1446fdd34f7198bff16fe569f980f30943dde59d1a83f6f79f087f21c
          top_layer: sha256:a04a6215363d4f9dd8816f17f4a382d4861a1a2bd255910bd0554b8930987e3a
        inspect-image.buildpacks.io/buildpacks: |-
          - id: tanzu-buildpacks/deprecation-warnings
            version: 0.0.2
          - id: paketo-buildpacks/ca-certificates
            version: 3.5.0
          - id: paketo-buildpacks/bellsoft-liberica
            version: 9.10.0
          - id: paketo-buildpacks/syft
            version: 1.10.1
          - id: paketo-buildpacks/maven
            version: 6.11.0
          - id: paketo-buildpacks/executable-jar
            version: 6.5.0
          - id: paketo-buildpacks/apache-tomcat
            version: 7.9.0
          - id: paketo-buildpacks/apache-tomee
            version: 1.4.0
          - id: paketo-buildpacks/liberty
            version: 2.4.0
          - id: paketo-buildpacks/dist-zip
            version: 5.4.0
          - id: paketo-buildpacks/spring-boot
            version: 5.20.0
          - id: paketo-buildpacks/image-labels
            version: 4.3.0
        inspect-image.buildpacks.io/run-image: ghcr.io/making/build-service@sha256:15368fb1446fdd34f7198bff16fe569f980f30943dde59d1a83f6f79f087f21c
        inspect-image.opencontainers.org/source: main/362eda7d73ed19263f1b1f18eb02b337160c37d1
        kapp.k14s.io/disable-original: ""
        kapp.k14s.io/identity: v1;blog/carto.run/Workload/blog-api;carto.run/v1alpha1
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
        services.conventions.apps.tanzu.vmware.com/postgres: postgresql/42.5.1
      labels:
        apis.apps.tanzu.vmware.com/register-api: "true"
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: blog-api
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: blog-api
        conventions.apps.tanzu.vmware.com/framework: spring-boot
        kapp.k14s.io/app: "1665663307561447397"
        kapp.k14s.io/association: v1.eae2bf111fb39e9481c024f683deba7a
        services.conventions.apps.tanzu.vmware.com/postgres: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.port: "8081"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: blog-api
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -XX:ReservedCodeCacheSize=32M -Xss512k -Dfile.encoding="UTF-8" -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.endpoint.health.show-details=always -Dmanagement.endpoints.web.base-path="/actuator" -Dmanagement.endpoints.web.exposure.include=* -Dmanagement.health.probes.enabled="true" -Dmanagement.server.port="8081" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s" -Duser.country="JP" -Duser.language="ja" -Duser.timezone="Asia/Tokyo"
        - name: BPL_JVM_THREAD_COUNT
          value: "28"
        - name: SPRING_APPLICATION_NAME
          valueFrom:
            secretKeyRef:
              key: otel-trace-service-name
              name: otel-config
        - name: SPRING_DATASOURCE_HIKARI_DATASOURCEPROPERTIES_SSLFACTORY
          value: org.postgresql.ssl.DefaultJavaSSLFactory
        - name: MANAGEMENT_TRACING_PROPAGATION_TYPE
          value: B3
        - name: SPRING_SECURITY_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: blog-config
        - name: BLOG_GITHUB_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: github-access-token
              name: blog-config
        - name: BLOG_GITHUB_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              key: github-webhook-secret
              name: blog-config
        - name: MANAGEMENT_ZIPKIN_TRACING_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: otel-trace-endpoint
              name: otel-config
        - name: MANAGEMENT_METRICS_TAGS_JAVA_VERSION
          value: ${java.version}
        - name: INFO_ENV_HOSTNAME
          value: ${HOSTNAME}
        - name: INFO_ENV_K_SERVICE
          value: ${K_SERVICE}
        - name: INFO_ENV_K_CONFIGURATION
          value: ${K_CONFIGURATION}
        - name: INFO_ENV_K_REVISION
          value: ${K_REVISION}
        image: ghcr.io/making/supply-chain/blog-api-blog@sha256:03d7775b6076264ace26fa4a1b136a24df5ac397770698eec0d001a3b63ac287
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources:
          limits:
            memory: 320Mi
          requests:
            memory: 320Mi
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

