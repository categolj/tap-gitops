apiVersion: kapp.k14s.io/v1alpha1
kind: Config
waitRules:
- conditionMatchers:
  - type: ServiceAvailable
    status: "False"
    failure: true
  - type: ServiceAvailable
    status: "True"
    success: true
  resourceMatchers:
  - apiVersionKindMatcher:
      apiVersion: servicebinding.io/v1alpha3
      kind: ServiceBinding
---
apiVersion: servicebinding.io/v1alpha3
kind: ServiceBinding
metadata:
  name: retrofacto-retrofacto-db
  annotations:
    kapp.k14s.io/identity: v1;retrofacto/carto.run/Workload/retrofacto;carto.run/v1alpha1
    kapp.k14s.io/original: '{"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"labels":{"app.kubernetes.io/part-of":"retrofacto","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web","kapp.k14s.io/app":"1710345334275056431","kapp.k14s.io/association":"v1.392e0436542d85f8c60dd5a20e233107"},"name":"retrofacto","namespace":"retrofacto"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"21"},{"name":"BP_JATTACH_ENABLED","value":"true"},{"name":"BP_MAVEN_ADDITIONAL_BUILD_ARGUMENTS","value":"-V -U"}]},"env":[{"name":"JAVA_TOOL_OPTIONS","value":"-XX:ActiveProcessorCount=2 -XX:ReservedCodeCacheSize=32M -Xss512k -Duser.timezone=Asia/Tokyo -Duser.language=ja -Duser.country=JP -Dfile.encoding=UTF-8"},{"name":"BPL_JVM_THREAD_COUNT","value":"30"},{"name":"MANAGEMENT_OTLP_TRACING_ENDPOINT","value":"http://otel-collector.opentelemetry.svc.cluster.local:4318/v1/traces"}],"params":[{"name":"annotations","value":{"autoscaling.knative.dev/maxScale":"2","autoscaling.knative.dev/minScale":"1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8081","prometheus.io/scrape":"true"}},{"name":"testing_pipeline_matching_labels","value":{"apps.tanzu.vmware.com/language":"skip"}}],"resources":{"limits":{"memory":"512Mi"},"requests":{"memory":"512Mi"}},"serviceClaims":[{"name":"retrofacto-db","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ClassClaim","name":"retrofacto-db"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/making/retrofacto"}}}}'
    kapp.k14s.io/original-diff-md5: c6e94dc94aed3401b5d0f26ed6c0bff3
    autoscaling.knative.dev/maxScale: "2"
    autoscaling.knative.dev/minScale: "1"
    prometheus.io/path: /actuator/prometheus
    prometheus.io/port: "8081"
    prometheus.io/scrape: "true"
    kapp.k14s.io/change-group: servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: retrofacto
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: retrofacto
spec:
  name: retrofacto-db
  service:
    apiVersion: services.apps.tanzu.vmware.com/v1alpha1
    kind: ClassClaim
    name: retrofacto-db
  workload:
    apiVersion: serving.knative.dev/v1
    kind: Service
    name: retrofacto

